<!-- File largely sourced from  https://github.com/jkleiber/intro_robotics_ws/blob/project1/src/reactive_robot/launch/reactive_robot_room.launch-->

<launch>
    <!-- Launch our nodes that control the robot. -->
    <node pkg="project1_pkg" type="command_node.py" name="command_node" output="screen"/>
    <node pkg="project1_pkg" type="reactive_node.py" name="reactive_node" output="screen"/>

    <!--
        Define arguments for simulation. The most important is the world_file
        argument which we use to define our world_file when launching gazebo.
    -->
    <arg name="world_file"  default="$(find project1_pkg)/worlds/room_world.world"/>
    <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
    <arg name="gui" default="true"/>
    <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
    <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR kinect)"/>  <!-- kinect, asus_xtion_pro --> 

    <!-- Launch gazebo with the world_file we declared earlier. -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Launch turtlebot. -->
    <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
        <arg name="base" value="$(arg base)"/>
        <arg name="stacks" value="$(arg stacks)"/>
        <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    </include>
  
    <!--
        Create a LaserScan from the DepthImage we get from the Kinect.
        Point it to the /scan topic.
    -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
            args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="scan" to="/scan"/>
    </node>

    <node pkg="tf" type="static_transform_publisher" name="base_footprint_2_base_frame"
    args="0 0 0.05 0 0 0 1 /base_footprint /base_frame" />
    <!--From hector_slam_launch tutorial.launch-->
    <param name="/use_sim_time" value="true"/>

    <node pkg="rviz" type="rviz" name="rviz"
        args="-d $(find hector_slam_launch)/rviz_cfg/mapping_demo.rviz"/>
    <include file="$(find project1_pkg)/launch/mapping.launch"/> -->

    <!--     
        Launch the keyboard control node. Leave uncommented when
        debugging as it messes up the screen output.
    -->
    <include file="$(find project1_pkg)/launch/bb_teleop.launch"/>

    <!-- 
        Launch the gmapping SLAM launch file. This handles creating
        a map of the environment.
     -->
    <include file="$(find turtlebot_navigation)/launch/includes/gmapping/$(arg 3d_sensor)_gmapping.launch.xml"/>
</launch>
