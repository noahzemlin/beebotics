<!-- File largely sourced from  https://github.com/jkleiber/intro_robotics_ws/blob/project1/src/reactive_robot/launch/reactive_robot_room.launch-->

<launch>
    <!-- Launch our nodes that control the robot. -->
    <node pkg="project1_pkg" type="control_node.py" name="control_node" output="screen"/>

    <!--
        Define arguments for simulation. The most important is the world_file
        argument which we use to define our world_file when launching gazebo.
    -->
    <arg name="world_file"  default="$(find project1_pkg)/worlds/devon_floor_1.world"/>
    <arg name="base"      value="$(optenv TURTLEBOT_BASE kobuki)"/> <!-- create, roomba -->
    <arg name="battery"   value="$(optenv TURTLEBOT_BATTERY /proc/acpi/battery/BAT0)"/>  <!-- /proc/acpi/battery/BAT0 --> 
    <arg name="gui" default="true"/>
    <arg name="stacks"    value="$(optenv TURTLEBOT_STACKS hexagons)"/>  <!-- circles, hexagons --> 
    <arg name="3d_sensor" value="$(optenv TURTLEBOT_3D_SENSOR asus_xtion_pro)"/>  <!-- kinect, asus_xtion_pro --> 
<!-- 
    <include file="$(find turtlebot_bringup)/launch/3dsensor.launch">
        <arg name="rgb_processing" value="false" />
        <arg name="depth_registration" value="false" />
        <arg name="depth_processing" value="false" />
    <include> -->


    <!-- Launch gazebo with the world_file we declared earlier. -->
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="use_sim_time" value="true"/>
        <arg name="debug" value="false"/>
        <arg name="gui" value="$(arg gui)" />
        <arg name="world_name" value="$(arg world_file)"/>
    </include>

    <!-- Launch turtlebot. -->
    <include file="$(find turtlebot_gazebo)/launch/includes/$(arg base).launch.xml">
        <arg name="base" value="$(arg base)"/>
        <arg name="stacks" value="$(arg stacks)"/>
        <arg name="3d_sensor" value="$(arg 3d_sensor)"/>
    </include>

    <!--
        Create a LaserScan from the DepthImage we get from the Kinect.
        Point it to the /scan topic.
    -->
    <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
    <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan"
            args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
        <param name="scan_height" value="10"/>
        <param name="output_frame_id" value="/camera_depth_frame"/>
        <param name="range_min" value="0.45"/>
        <remap from="image" to="/camera/depth/image_raw"/>
        <remap from="scan" to="/scan"/>
    </node>
   
    <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
        <param name="publish_frequency" type="double" value="30.0" />
    </node>

    <include file="$(find turtlebot_rviz_launchers)/launch/view_navigation.launch"/>

    <arg name="map_file" default="$(find project1_pkg)/complete_devon.yaml"/>

    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" />


    <!--     
        Launch the keyboard control node. Leave uncommented when
        debugging as it messes up the screen output.
    -->
    <!-- <include file="$(find project1_pkg)/launch/bb_teleop.launch"/> -->

    <!-- AMCL -->
    <arg name="custom_amcl_launch_file" default="$(find turtlebot_navigation)/launch/includes/amcl/$(arg 3d_sensor)_amcl.launch.xml"/>
    <arg name="initial_pose_x" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
    <arg name="initial_pose_y" default="0.0"/> <!-- Use 17.0 for willow's map in simulation -->
    <arg name="initial_pose_a" default="0.0"/>
    <include file="$(arg custom_amcl_launch_file)">
        <arg name="initial_pose_x" value="$(arg initial_pose_x)"/>
        <arg name="initial_pose_y" value="$(arg initial_pose_y)"/>
        <arg name="initial_pose_a" value="$(arg initial_pose_a)"/>
    </include>

    <!-- Move base -->
    <arg name="custom_param_file" default="$(find turtlebot_navigation)/param/$(arg 3d_sensor)_costmap_params.yaml"/>
    <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml">
        <arg name="custom_param_file" value="$(arg custom_param_file)"/>
    </include>

    <!-- 
        Launch the gmapping SLAM launch file. This handles creating
        a map of the environment.

    <include file="$(find turtlebot_navigation)/launch/includes/gmapping/$(arg 3d_sensor)_gmapping.launch.xml"/>
    -->
    <!-- <arg name="custom_gmapping_launch_file" default="$(find turtlebot_navigation)/launch/includes/gmapping/$(arg 3d_sensor)_gmapping.launch.xml"/>
    <include file="$(arg custom_gmapping_launch_file)"/> -->

</launch>
